name: 'Terragrunt Plan Dong'
on:
  push:
    branches:
      - main
    paths:
      - 'infra/terrafrom/dev/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infra/terraform/dev/**'

env:
  tf_version: '1.9.5'
  tg_version: '0.67.0'
  aws_region: 'ap-southeast-3'
  working_dir: './infra/terraform/dev'

permissions:
  id-token: write
  contents: read
  pull_requests: write

jobs:
  terragrunt:
    name: 'Terragrunt dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::975050366595:role/github-actions-ec2-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Init
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: infra/terraform
          tg_command: 'run-all init'

      - name: Terragrunt Format
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "Checking if Terragrunt files are formatted correctly..."
          if ! terragrunt fmt -check; then
            echo "Error: Terragrunt files are not formatted correctly."
            echo "Run 'terragrunt fmt' to fix the formatting."
            exit 1
          fi

      - name: Validate
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: infra/terraform
          tg_command: 'run-all validate'

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: infra/terraform
          tg_command: 'run-all plan'
        
      - name: Apply
        uses: gruntwork-io/terragrunt-action@v2
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{ env.TF_WORKING_DIR }}
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: infra/terraform
          tg_command: 'run-all apply --auto-approve'
